0 : ( 4 )		call	main	;
1 : ( 2 )		mov	ebx,	0	; valeur de retour du programme
2 : ( 3 )		mov	eax,	1	;
3 : ( 4 )		int 0x80	;
4 : ( 5 )	main :	push	ebp	;sauvegarde la valeur de ebp
5 : ( 6 )		mov	ebp,	esp	;nouvelle valeur de ebp
6 : ( 7 )		sub	esp,	4	;allocation des variables locales
7 : ( 8 )		mov	dword [ebp-4*1],	2	;Affect
8 : ( 9 )		mov	r0,	dword [ebp-4*1]	;
9 : ( 10 )		add	r0,	0	;
10 : ( 11 )		mov	r5,	r0	;
11 : ( 12 )		mov	dword [tab+4*r5],	34	;Affect
12 : ( 13 )		mov	r1,	dword [ebp-4*1]	;
13 : ( 14 )		add	r1,	1	;
14 : ( 15 )		mov	r6,	r1	;
15 : ( 16 )		mov	dword [tab+4*r6],	74	;Affect
16 : ( 17 )		mov	r2,	dword [ebp-4*1]	;
17 : ( 18 )		add	r2,	2	;
18 : ( 19 )		mov	r7,	r2	;
19 : ( 20 )		mov	dword [tab+4*r7],	16	;Affect
20 : ( 21 )		mov	r9,	2	;
21 : ( 22 )		mov	eax,	dword [tab+4*r9]	;Write 1
22 : ( )		call	iprintLF	;Write 2
23 : ( 24 )		mov	r11,	3	;
24 : ( 25 )		mov	eax,	dword [tab+4*r11]	;Write 1
25 : ( )		call	iprintLF	;Write 2
26 : ( 27 )		mov	r13,	4	;
27 : ( 28 )		mov	eax,	dword [tab+4*r13]	;Write 1
28 : ( )		call	iprintLF	;Write 2
29 : ( 30 )		add	esp,	4	;d√©sallocation des variables locales
30 : ( 31 )		pop	ebp	;restaure la valeur de ebp
31 : ( )		ret	;
