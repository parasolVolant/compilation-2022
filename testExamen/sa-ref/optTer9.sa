<programme type="SaProg">
 <fonctions type="SaLDec">
  <tete type="SaDecFonc" nom="f">
   <parametres type="SaLDec">
    <tete type="SaDecVar" nom="a"/>
    <queue type="SaLDec">
     <tete type="SaDecVar" nom="b"/>
     <queue type="SaLDec">
      <tete type="SaDecVar" nom="c"/>
     </queue>
    </queue>
   </parametres>
   <corps type="SaInstBloc">
    <val type="SaLInst">
     <tete type="SaInstRetour">
      <val type="SaExpAdd">
       <op1 type="SaExpAdd">
        <op1 type="SaExpVar">
         <var type="SaVarSimple" nom="a"/>
        </op1>
        <op2 type="SaExpVar">
         <var type="SaVarSimple" nom="b"/>
        </op2>
       </op1>
       <op2 type="SaExpVar">
        <var type="SaVarSimple" nom="c"/>
       </op2>
      </val>
     </tete>
    </val>
   </corps>
  </tete>
  <queue type="SaLDec">
   <tete type="SaDecFonc" nom="main">
    <corps type="SaInstBloc">
     <val type="SaLInst">
      <tete type="SaInstEcriture">
       <arg type="SaExpAppel">
        <val type="SaAppel" nom="f">
         <arguments type="SaLExp">
          <tete type="SaExpInt" val="1"/>
          <queue type="SaLExp">
           <tete type="SaExpOptTer">
            <test type="SaExpEqual">
             <op1 type="SaExpInt" val="1"/>
             <op2 type="SaExpInt" val="0"/>
            </test>
            <oui type="SaExpInt" val="1"/>
            <non type="SaExpInt" val="2"/>
           </tete>
           <queue type="SaLExp">
            <tete type="SaExpInt" val="3"/>
           </queue>
          </queue>
         </arguments>
        </val>
       </arg>
      </tete>
     </val>
    </corps>
   </tete>
  </queue>
 </fonctions>
</programme>
